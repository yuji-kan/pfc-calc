{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pfc-calc-ts\\\\src\\\\components\\\\Form.tsx\";\nimport React, { useState } from 'react';\nimport food from \"../data/food\";\n\nconst Form = () => {\n  // input form\n  const [basalMetabolicRate, setBasalMetabolicRate] = useState(0);\n  const [intakeCoefficient, setIntakeCoefficient] = useState(0);\n  const [bodyWeight, setbodyWeight] = useState(0);\n  const [bodyFat, setBodyFat] = useState(0);\n  const [proteinCoefficient, setProteinCoefficient] = useState(0);\n  const [mealTimes, setMealTimes] = useState(0); // output\n\n  const [wLeanBodyMass, setwLeanBodyMass] = useState(0);\n  const [wCalorieIntakeDay, setwCalorieIntakeDay] = useState(0);\n  const [wChickenBreastCalorieIntake, setwChickenBreastCalorieIntake] = useState(0);\n  const [wChickenBreast, setwChickenBreast] = useState(0);\n  const [wChickenBreastCalorie, setwChickenBreastCalorie] = useState(0);\n  const [wOtherProtainCalorie, setwOtherProtainCalorie] = useState(0);\n  const [wSweetPotato, setwSweetPotato] = useState(0);\n  const [wChickenBreastOnce, setwChickenBreastOnce] = useState(0);\n  const [wSweetPotatoOnce, setwSweetPotatoOnce] = useState(0); // submit button\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setwLeanBodyMass(bodyWeight - bodyWeight * (bodyFat / 100));\n    setwCalorieIntakeDay(basalMetabolicRate !== 0 && intakeCoefficient !== 0 ? basalMetabolicRate * intakeCoefficient : 0);\n    setwChickenBreastCalorieIntake(bodyWeight !== 0 ? parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) * proteinCoefficient : 0);\n    setwChickenBreast(bodyWeight !== 0 ? parseInt(parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) * proteinCoefficient / food.chickenBreast.protein * 100) : \"\");\n    setwChickenBreastCalorie(parseInt(parseInt(parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) * proteinCoefficient / food.chickenBreast.protein * 100) / 100 * food.chickenBreast.calorie));\n    setwOtherProtainCalorie(parseInt(basalMetabolicRate * intakeCoefficient - parseInt(parseInt(parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) * proteinCoefficient / food.chickenBreast.protein * 100) / 100 * food.chickenBreast.calorie)));\n    setwSweetPotato(parseInt(basalMetabolicRate * intakeCoefficient / food.sweetPotato.calorie * 100));\n    setwChickenBreastOnce(mealTimes !== 0 ? parseInt(parseInt(parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) * proteinCoefficient / food.chickenBreast.protein * 100) / mealTimes) : 0);\n    setwSweetPotatoOnce(mealTimes !== 0 ? parseInt(parseInt(basalMetabolicRate * intakeCoefficient / food.sweetPotato.calorie * 100) / mealTimes) : 0);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"contact-form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"basalMetabolicRate\",\n    id: \"basalMetabolicRate\",\n    min: 1000,\n    max: 2500,\n    onChange: e => setBasalMetabolicRate(e.target.value),\n    placeholder: \"\\u57FA\\u790E\\u4EE3\\u8B1D(kcal)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"intakeCoefficient\",\n    id: \"intakeCoefficient\",\n    min: 1.3,\n    max: 1.7,\n    step: \"0.1\",\n    onChange: e => setIntakeCoefficient(e.target.value),\n    placeholder: \"\\u6442\\u53D6\\u4FC2\\u6570(1.3-1.7) for diet 1.3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bodyWeight\",\n    id: \"bodyWeight\",\n    min: 40,\n    max: 140,\n    onChange: e => setbodyWeight(e.target.value),\n    placeholder: \"\\u4F53\\u91CD(40-140kg)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bodyFat\",\n    id: \"bodyFat\",\n    min: 3,\n    max: 40,\n    onChange: e => setBodyFat(e.target.value),\n    placeholder: \"\\u4F53\\u8102\\u80AA(3-25%)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"proteinCoefficient\",\n    id: \"proteinCoefficient\",\n    min: 2,\n    max: 2.5,\n    step: \"0.1\",\n    onChange: e => setProteinCoefficient(e.target.value),\n    placeholder: \"Protein\\u6442\\u53D6\\u4FC2\\u6570(2-2.5) 2.5\\u63A8\\u5968\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"mealTimes\",\n    id: \"mealTimes\",\n    min: 3,\n    max: 6,\n    onChange: e => setMealTimes(e.target.value),\n    placeholder: \"1\\u65E5\\u306E\\u98DF\\u4E8B\\u56DE\\u6570(3-6\\u56DE)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"=\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"\\u9664\\u8102\\u80AA\\u4F53\\u91CD : \", wLeanBodyMass, \"kg\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, \"1\\u65E5\\u306E\\u30AB\\u30ED\\u30EA\\u30FC\\u6442\\u53D6\\u91CF : \", wCalorieIntakeDay, \"kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"1\\u65E5\\u306E\\u76EE\\u6A19Protein\\u6442\\u53D6\\u91CF : \", wChickenBreastCalorieIntake, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"\\u9D8F\\u3080\\u306D\\u8089\\u306E\\u91CF/day : \", wChickenBreast, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"\\u9D8F\\u3080\\u306D\\u8089\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC/day : \", wChickenBreastCalorie, \"kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Protein\\u4EE5\\u5916\\u306E\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC : \", wOtherProtainCalorie, \"kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"\\u30B5\\u30C4\\u30DE\\u30A4\\u30E2\\u306E\\u91CF/day : \", wSweetPotato, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"\\u98DF\\u4E8B\\u304C1\\u65E5\", mealTimes, \"\\u56DE\\u306E\\u5834\\u5408\\u30011\\u56DE\\u306B\\u6442\\u53D6\\u3059\\u308B\\u9D8F\\u3080\\u306D\\u8089\\u306E\\u91CF :\", \" \", wChickenBreastOnce, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, \"\\u98DF\\u4E8B\\u304C1\\u65E5\", mealTimes, \"\\u56DE\\u306E\\u5834\\u5408\\u30011\\u56DE\\u306B\\u6442\\u53D6\\u3059\\u308B\\u30B5\\u30C4\\u30DE\\u30A4\\u30E2\\u306E\\u91CF :\", wSweetPotatoOnce, \"g\")))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/xampp/htdocs/pfc-calc-ts/src/components/Form.tsx"],"names":["React","useState","food","Form","basalMetabolicRate","setBasalMetabolicRate","intakeCoefficient","setIntakeCoefficient","bodyWeight","setbodyWeight","bodyFat","setBodyFat","proteinCoefficient","setProteinCoefficient","mealTimes","setMealTimes","wLeanBodyMass","setwLeanBodyMass","wCalorieIntakeDay","setwCalorieIntakeDay","wChickenBreastCalorieIntake","setwChickenBreastCalorieIntake","wChickenBreast","setwChickenBreast","wChickenBreastCalorie","setwChickenBreastCalorie","wOtherProtainCalorie","setwOtherProtainCalorie","wSweetPotato","setwSweetPotato","wChickenBreastOnce","setwChickenBreastOnce","wSweetPotatoOnce","setwSweetPotatoOnce","submitHandler","e","preventDefault","parseInt","chickenBreast","protein","calorie","sweetPotato","target","value"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState, FormEvent } from 'react';\r\nimport food from \"../data/food\"\r\n\r\nconst Form: React.FC = () => {\r\n    // input form\r\n    const [basalMetabolicRate, setBasalMetabolicRate] = useState(0)\r\n    const [intakeCoefficient, setIntakeCoefficient] = useState(0)\r\n    const [bodyWeight, setbodyWeight] = useState(0)\r\n    const [bodyFat, setBodyFat] = useState(0)\r\n    const [proteinCoefficient, setProteinCoefficient] = useState(0)\r\n    const [mealTimes, setMealTimes] = useState(0)\r\n\r\n    // output\r\n    const [wLeanBodyMass, setwLeanBodyMass] = useState(0)\r\n    const [wCalorieIntakeDay, setwCalorieIntakeDay] = useState(0)\r\n    const [\r\n        wChickenBreastCalorieIntake,\r\n        setwChickenBreastCalorieIntake\r\n    ] = useState(0)\r\n    const [wChickenBreast, setwChickenBreast] = useState(0)\r\n    const [wChickenBreastCalorie, setwChickenBreastCalorie] = useState(0)\r\n    const [wOtherProtainCalorie, setwOtherProtainCalorie] = useState(0)\r\n    const [wSweetPotato, setwSweetPotato] = useState(0)\r\n    const [wChickenBreastOnce, setwChickenBreastOnce] = useState(0)\r\n    const [wSweetPotatoOnce, setwSweetPotatoOnce] = useState(0)\r\n\r\n    // submit button\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        setwLeanBodyMass(bodyWeight - bodyWeight * (bodyFat / 100))\r\n\r\n        setwCalorieIntakeDay(\r\n            basalMetabolicRate !== 0 && intakeCoefficient !== 0\r\n                ? basalMetabolicRate * intakeCoefficient\r\n                : 0\r\n        )\r\n        setwChickenBreastCalorieIntake(\r\n            bodyWeight !== 0\r\n                ? parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) *\r\n                proteinCoefficient\r\n                : 0\r\n        )\r\n        setwChickenBreast(\r\n            bodyWeight !== 0\r\n                ? parseInt(\r\n                    ((parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) *\r\n                        proteinCoefficient) /\r\n                        food.chickenBreast.protein) *\r\n                    100\r\n                )\r\n                : \"\"\r\n        )\r\n        setwChickenBreastCalorie(\r\n            parseInt(\r\n                (parseInt(\r\n                    ((parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) *\r\n                        proteinCoefficient) /\r\n                        food.chickenBreast.protein) *\r\n                    100\r\n                ) /\r\n                    100) *\r\n                food.chickenBreast.calorie\r\n            )\r\n        )\r\n        setwOtherProtainCalorie(\r\n            parseInt(\r\n                basalMetabolicRate * intakeCoefficient -\r\n                parseInt(\r\n                    (parseInt(\r\n                        ((parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) *\r\n                            proteinCoefficient) /\r\n                            food.chickenBreast.protein) *\r\n                        100\r\n                    ) /\r\n                        100) *\r\n                    food.chickenBreast.calorie\r\n                )\r\n            )\r\n        )\r\n        setwSweetPotato(\r\n            parseInt(\r\n                ((basalMetabolicRate * intakeCoefficient) / food.sweetPotato.calorie) *\r\n                100\r\n            )\r\n        )\r\n        setwChickenBreastOnce(\r\n            mealTimes !== 0\r\n                ? parseInt(\r\n                    parseInt(\r\n                        ((parseInt(bodyWeight - bodyWeight * (bodyFat / 100)) *\r\n                            proteinCoefficient) /\r\n                            food.chickenBreast.protein) *\r\n                        100\r\n                    ) / mealTimes\r\n                )\r\n                : 0\r\n        )\r\n        setwSweetPotatoOnce(\r\n            mealTimes !== 0\r\n                ? parseInt(\r\n                    parseInt(\r\n                        ((basalMetabolicRate * intakeCoefficient) /\r\n                            food.sweetPotato.calorie) *\r\n                        100\r\n                    ) / mealTimes\r\n                )\r\n                : 0\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='wrapper'>\r\n                <form className=\"contact-form\" onSubmit={submitHandler}>\r\n                    <div className=\"input-fields\">\r\n\r\n                        <input\r\n                            type='number'\r\n                            name='basalMetabolicRate'\r\n                            id='basalMetabolicRate'\r\n                            min={1000}\r\n                            max={2500}\r\n                            onChange={e => setBasalMetabolicRate(e.target.value)}\r\n                            placeholder=\"基礎代謝(kcal)\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='intakeCoefficient'\r\n                            id='intakeCoefficient'\r\n                            min={1.3}\r\n                            max={1.7}\r\n                            step='0.1'\r\n                            onChange={e => setIntakeCoefficient(e.target.value)}\r\n                            placeholder=\"摂取係数(1.3-1.7) for diet 1.3\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='bodyWeight'\r\n                            id='bodyWeight'\r\n                            min={40}\r\n                            max={140}\r\n                            onChange={e => setbodyWeight(e.target.value)}\r\n                            placeholder=\"体重(40-140kg)\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='bodyFat'\r\n                            id='bodyFat'\r\n                            min={3}\r\n                            max={40}\r\n                            onChange={e => setBodyFat(e.target.value)}\r\n                            placeholder=\"体脂肪(3-25%)\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='proteinCoefficient'\r\n                            id='proteinCoefficient'\r\n                            min={2}\r\n                            max={2.5}\r\n                            step='0.1'\r\n                            onChange={e => setProteinCoefficient(e.target.value)}\r\n                            placeholder=\"Protein摂取係数(2-2.5) 2.5推奨\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='mealTimes'\r\n                            id='mealTimes'\r\n                            min={3}\r\n                            max={6}\r\n                            onChange={e => setMealTimes(e.target.value)}\r\n                            placeholder=\"1日の食事回数(3-6回)\"\r\n                        />\r\n                        <button className=\"btn\">=</button>\r\n                    </div>\r\n\r\n                    <div className=\"output\">\r\n\r\n                        <p>除脂肪体重 : {wLeanBodyMass}kg</p>\r\n                        <p>1日のカロリー摂取量 : {wCalorieIntakeDay}kcal</p>\r\n                        <p>\r\n                            1日の目標Protein摂取量 : {wChickenBreastCalorieIntake}g\r\n          </p>\r\n                        <p>鶏むね肉の量/day : {wChickenBreast}g</p>\r\n                        <p>鶏むね肉摂取カロリー/day : {wChickenBreastCalorie}kcal</p>\r\n                        <p>Protein以外の摂取カロリー : {wOtherProtainCalorie}kcal</p>\r\n                        <p>サツマイモの量/day : {wSweetPotato}g</p>\r\n                        <p>\r\n                            食事が1日{mealTimes}回の場合、1回に摂取する鶏むね肉の量 :{\" \"}\r\n                            {wChickenBreastOnce}g\r\n          </p>\r\n                        <p>\r\n                            食事が1日{mealTimes}回の場合、1回に摂取するサツマイモの量 :\r\n            {wSweetPotatoOnce}g\r\n          </p>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}