{"ast":null,"code":"import _slicedToArray from\"C:\\\\xampp\\\\htdocs\\\\pfc-calc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import food from\"../data/food\";var Form=function Form(){var BASE=0.1;function orgFloor(value,base){return Math.floor(value*base)/base;}// input useState set \nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),basalMetabolicRate=_useState2[0],setBasalMetabolicRate=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),intakeCoefficient=_useState4[0],setIntakeCoefficient=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),bodyWeight=_useState6[0],setbodyWeight=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),bodyFat=_useState8[0],setBodyFat=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),proteinCoefficient=_useState10[0],setProteinCoefficient=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),mealTimes=_useState12[0],setMealTimes=_useState12[1];// form input and set\nvar inputChange01=function inputChange01(e){setBasalMetabolicRate(e.target.value);};var inputChange02=function inputChange02(e){setIntakeCoefficient(e.target.value);};var inputChange03=function inputChange03(e){setbodyWeight(e.target.value);};var inputChange04=function inputChange04(e){setBodyFat(e.target.value);};var inputChange05=function inputChange05(e){setProteinCoefficient(e.target.value);};var inputChange06=function inputChange06(e){setMealTimes(e.target.value);};// output set\nvar _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),wLeanBodyMass=_useState14[0],setwLeanBodyMass=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),wCalorieIntakeDay=_useState16[0],setwCalorieIntakeDay=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),wChickenBreastCalorieIntake=_useState18[0],setwChickenBreastCalorieIntake=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),wChickenBreast=_useState20[0],setwChickenBreast=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),wChickenBreastCalorie=_useState22[0],setwChickenBreastCalorie=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),wOtherProtainCalorie=_useState24[0],setwOtherProtainCalorie=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),wSweetPotato=_useState26[0],setwSweetPotato=_useState26[1];var _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),wChickenBreastOnce=_useState28[0],setwChickenBreastOnce=_useState28[1];var _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),wSweetPotatoOnce=_useState30[0],setwSweetPotatoOnce=_useState30[1];// submit button\nvar submitHandler=function submitHandler(e){e.preventDefault();setwLeanBodyMass(String(Number(bodyWeight)-Number(bodyWeight)*(Number(bodyFat)/100)));setwCalorieIntakeDay(Number(basalMetabolicRate)!==0&&Number(intakeCoefficient)!==0?String(orgFloor(Number(basalMetabolicRate)*Number(intakeCoefficient),BASE)):\"\");setwChickenBreastCalorieIntake(Number(bodyWeight)!==0?String(orgFloor((Number(bodyWeight)-Number(bodyWeight)*(Number(bodyFat)/100))*Number(proteinCoefficient),BASE)):\"\");setwChickenBreast(Number(bodyWeight)!==0?String(orgFloor((Number(bodyWeight)-Number(bodyWeight)*(Number(bodyFat)/100))*Number(proteinCoefficient)/Number(food.chickenBreast.protein)*100,BASE)):\"\");setwChickenBreastCalorie(String(orgFloor((Number(bodyWeight)-Number(bodyWeight)*(Number(bodyFat)/100))*Number(proteinCoefficient)/Number(food.chickenBreast.protein)*100/100*Number(food.chickenBreast.calorie),BASE)));setwOtherProtainCalorie(String(orgFloor(Number(basalMetabolicRate)*Number(intakeCoefficient)-(Number(bodyWeight)-Number(bodyWeight)*(Number(bodyFat)/100))*Number(proteinCoefficient)/Number(food.chickenBreast.protein)*100/100*Number(food.chickenBreast.calorie),BASE)));setwSweetPotato(String(orgFloor(Number(basalMetabolicRate)*Number(intakeCoefficient)/Number(food.sweetPotato.calorie)*100,BASE)));setwChickenBreastOnce(Number(mealTimes)!==0?String(orgFloor((Number(bodyWeight)-Number(bodyWeight)*(Number(bodyFat)/100))*Number(proteinCoefficient)/Number(food.chickenBreast.protein)*100/Number(mealTimes),BASE)):\"\");setwSweetPotatoOnce(Number(mealTimes)!==0?String(orgFloor(Number(basalMetabolicRate)*Number(intakeCoefficient)/Number(food.sweetPotato.calorie)*100/Number(mealTimes),BASE)):\"\");};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper\"},/*#__PURE__*/React.createElement(\"form\",{className:\"contact-form\",onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"div\",{className:\"input-fields\"},/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"basalMetabolicRate\",id:\"basalMetabolicRate\",min:1000,max:2500,onChange:inputChange01,placeholder:\"\\u57FA\\u790E\\u4EE3\\u8B1D(kcal)\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"intakeCoefficient\",id:\"intakeCoefficient\",min:1.3,max:1.7,step:\"0.1\",onChange:inputChange02,placeholder:\"\\u6442\\u53D6\\u4FC2\\u6570(1.3-1.7) for diet 1.3\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"bodyWeight\",id:\"bodyWeight\",min:40,max:140,onChange:inputChange03,placeholder:\"\\u4F53\\u91CD(40-140kg)\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"bodyFat\",id:\"bodyFat\",min:3,max:40,onChange:inputChange04,placeholder:\"\\u4F53\\u8102\\u80AA(3-25%)\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"proteinCoefficient\",id:\"proteinCoefficient\",min:2,max:2.5,step:\"0.1\",onChange:inputChange05,placeholder:\"Protein\\u6442\\u53D6\\u4FC2\\u6570(2-2.5) 2.5\\u63A8\\u5968\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",name:\"mealTimes\",id:\"mealTimes\",min:3,max:6,onChange:inputChange06,placeholder:\"1\\u65E5\\u306E\\u98DF\\u4E8B\\u56DE\\u6570(3-6\\u56DE)\"}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn\"},\"=\")),/*#__PURE__*/React.createElement(\"div\",{className:\"output\"},/*#__PURE__*/React.createElement(\"p\",null,\"\\u9664\\u8102\\u80AA\\u4F53\\u91CD : \",wLeanBodyMass,\"kg\"),/*#__PURE__*/React.createElement(\"p\",null,\"1\\u65E5\\u306E\\u30AB\\u30ED\\u30EA\\u30FC\\u6442\\u53D6\\u91CF : \",wCalorieIntakeDay,\"kcal\"),/*#__PURE__*/React.createElement(\"p\",null,\"1\\u65E5\\u306E\\u76EE\\u6A19Protein\\u6442\\u53D6\\u91CF : \",wChickenBreastCalorieIntake,\"g\"),/*#__PURE__*/React.createElement(\"p\",null,\"\\u9D8F\\u3080\\u306D\\u8089\\u306E\\u91CF/day : \",wChickenBreast,\"g\"),/*#__PURE__*/React.createElement(\"p\",null,\"\\u9D8F\\u3080\\u306D\\u8089\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC/day : \",wChickenBreastCalorie,\"kcal\"),/*#__PURE__*/React.createElement(\"p\",null,\"Protein\\u4EE5\\u5916\\u306E\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC : \",wOtherProtainCalorie,\"kcal\"),/*#__PURE__*/React.createElement(\"p\",null,\"\\u30B5\\u30C4\\u30DE\\u30A4\\u30E2\\u306E\\u91CF/day : \",wSweetPotato,\"g\"),/*#__PURE__*/React.createElement(\"p\",null,\"\\u98DF\\u4E8B\\u304C1\\u65E5\",mealTimes,\"\\u56DE\\u306E\\u5834\\u5408\\u30011\\u56DE\\u306B\\u6442\\u53D6\\u3059\\u308B\\u9D8F\\u3080\\u306D\\u8089\\u306E\\u91CF : \",wChickenBreastOnce,\"g\"),/*#__PURE__*/React.createElement(\"p\",null,\"\\u98DF\\u4E8B\\u304C1\\u65E5\",mealTimes,\"\\u56DE\\u306E\\u5834\\u5408\\u30011\\u56DE\\u306B\\u6442\\u53D6\\u3059\\u308B\\u30B5\\u30C4\\u30DE\\u30A4\\u30E2\\u306E\\u91CF : \",wSweetPotatoOnce,\"g\")))));};export default Form;","map":{"version":3,"sources":["C:/xampp/htdocs/pfc-calc/src/components/Form.tsx"],"names":["React","useState","food","Form","BASE","orgFloor","value","base","Math","floor","basalMetabolicRate","setBasalMetabolicRate","intakeCoefficient","setIntakeCoefficient","bodyWeight","setbodyWeight","bodyFat","setBodyFat","proteinCoefficient","setProteinCoefficient","mealTimes","setMealTimes","inputChange01","e","target","inputChange02","inputChange03","inputChange04","inputChange05","inputChange06","wLeanBodyMass","setwLeanBodyMass","wCalorieIntakeDay","setwCalorieIntakeDay","wChickenBreastCalorieIntake","setwChickenBreastCalorieIntake","wChickenBreast","setwChickenBreast","wChickenBreastCalorie","setwChickenBreastCalorie","wOtherProtainCalorie","setwOtherProtainCalorie","wSweetPotato","setwSweetPotato","wChickenBreastOnce","setwChickenBreastOnce","wSweetPotatoOnce","setwSweetPotatoOnce","submitHandler","preventDefault","String","Number","chickenBreast","protein","calorie","sweetPotato"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState, FormEvent } from 'react';\nimport food from \"../data/food\"\n\nconst Form: React.FC = () => {\n    const BASE: number = 0.1;\n    function orgFloor(value: number, base: number): number {\n        return Math.floor(value * base) / base;\n    }\n\n    // input useState set \n    const [basalMetabolicRate, setBasalMetabolicRate] = useState(\"\")\n    const [intakeCoefficient, setIntakeCoefficient] = useState(\"\")\n    const [bodyWeight, setbodyWeight] = useState(\"\")\n    const [bodyFat, setBodyFat] = useState(\"\")\n    const [proteinCoefficient, setProteinCoefficient] = useState(\"\")\n    const [mealTimes, setMealTimes] = useState(\"\")\n\n    // form input and set\n    const inputChange01 = (e: ChangeEvent<HTMLInputElement>) => {\n        setBasalMetabolicRate(e.target.value)\n    }\n    const inputChange02 = (e: ChangeEvent<HTMLInputElement>) => {\n        setIntakeCoefficient(e.target.value)\n    }\n    const inputChange03 = (e: ChangeEvent<HTMLInputElement>) => {\n        setbodyWeight(e.target.value)\n    }\n    const inputChange04 = (e: ChangeEvent<HTMLInputElement>) => {\n        setBodyFat(e.target.value)\n    }\n    const inputChange05 = (e: ChangeEvent<HTMLInputElement>) => {\n        setProteinCoefficient(e.target.value)\n    }\n    const inputChange06 = (e: ChangeEvent<HTMLInputElement>) => {\n        setMealTimes(e.target.value)\n    }\n\n    // output set\n    const [wLeanBodyMass, setwLeanBodyMass] = useState(\"\")\n    const [wCalorieIntakeDay, setwCalorieIntakeDay] = useState(\"\")\n    const [\n        wChickenBreastCalorieIntake,\n        setwChickenBreastCalorieIntake\n    ] = useState(\"\")\n    const [wChickenBreast, setwChickenBreast] = useState(\"\")\n    const [wChickenBreastCalorie, setwChickenBreastCalorie] = useState(\"\")\n    const [wOtherProtainCalorie, setwOtherProtainCalorie] = useState(\"\")\n    const [wSweetPotato, setwSweetPotato] = useState(\"\")\n    const [wChickenBreastOnce, setwChickenBreastOnce] = useState(\"\")\n    const [wSweetPotatoOnce, setwSweetPotatoOnce] = useState(\"\")\n\n    // submit button\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        setwLeanBodyMass(String(Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)))\n\n        setwCalorieIntakeDay(\n            Number(basalMetabolicRate) !== 0 && Number(intakeCoefficient) !== 0\n                ? String(orgFloor(Number(basalMetabolicRate) * Number(intakeCoefficient), BASE))\n                : \"\"\n        )\n        setwChickenBreastCalorieIntake(\n            Number(bodyWeight) !== 0\n                ? String(\n                    orgFloor((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\n                        Number(proteinCoefficient), BASE)\n                )\n                : \"\"\n        )\n        setwChickenBreast(\n            Number(bodyWeight) !== 0\n                ? String(\n                    orgFloor(((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\n                        Number(proteinCoefficient)) /\n                        Number(food.chickenBreast.protein) *\n                        100, BASE)\n                )\n                : \"\"\n        )\n        setwChickenBreastCalorie(\n            String(\n                orgFloor(((\n                    (\n                        (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\n                        Number(proteinCoefficient) /\n                        Number(food.chickenBreast.protein) *\n                        100\n                    ) /\n                    100) *\n                    Number(food.chickenBreast.calorie)), BASE)\n            )\n        )\n        setwOtherProtainCalorie(\n            String(\n                orgFloor((Number(basalMetabolicRate) * Number(intakeCoefficient) -\n                    (\n                        (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\n                        Number(proteinCoefficient) /\n                        Number(food.chickenBreast.protein) *\n                        100\n                        /\n                        100) *\n                    Number(food.chickenBreast.calorie)), BASE)\n            )\n        )\n        setwSweetPotato(\n            String(\n                orgFloor((((Number(basalMetabolicRate) * Number(intakeCoefficient)) / Number(food.sweetPotato.calorie)) *\n                    100), BASE)\n            )\n        )\n        setwChickenBreastOnce(\n            Number(mealTimes) !== 0\n                ? String(\n                    orgFloor(((\n                        (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\n                        Number(proteinCoefficient) /\n                        Number(food.chickenBreast.protein)) *\n                        100\n                    ) / Number(mealTimes), BASE)\n                )\n                : \"\"\n        )\n        setwSweetPotatoOnce(\n            Number(mealTimes) !== 0\n                ? String(\n                    orgFloor((\n                        ((Number(basalMetabolicRate) * Number(intakeCoefficient)) /\n                            Number(food.sweetPotato.calorie)) *\n                        100\n                    ) / Number(mealTimes), BASE)\n                )\n                : \"\"\n        )\n    }\n\n    return (\n        <>\n            <div className='wrapper'>\n                <form className=\"contact-form\" onSubmit={submitHandler}>\n                    <div className=\"input-fields\">\n\n                        <input\n                            type='number'\n                            name='basalMetabolicRate'\n                            id='basalMetabolicRate'\n                            min={1000}\n                            max={2500}\n                            onChange={inputChange01}\n                            placeholder=\"基礎代謝(kcal)\"\n                        />\n                        <input\n                            type='number'\n                            name='intakeCoefficient'\n                            id='intakeCoefficient'\n                            min={1.3}\n                            max={1.7}\n                            step='0.1'\n                            onChange={inputChange02}\n                            placeholder=\"摂取係数(1.3-1.7) for diet 1.3\"\n                        />\n                        <input\n                            type='number'\n                            name='bodyWeight'\n                            id='bodyWeight'\n                            min={40}\n                            max={140}\n                            onChange={inputChange03}\n                            placeholder=\"体重(40-140kg)\"\n                        />\n                        <input\n                            type='number'\n                            name='bodyFat'\n                            id='bodyFat'\n                            min={3}\n                            max={40}\n                            onChange={inputChange04}\n                            placeholder=\"体脂肪(3-25%)\"\n                        />\n                        <input\n                            type='number'\n                            name='proteinCoefficient'\n                            id='proteinCoefficient'\n                            min={2}\n                            max={2.5}\n                            step='0.1'\n                            onChange={inputChange05}\n                            placeholder=\"Protein摂取係数(2-2.5) 2.5推奨\"\n                        />\n                        <input\n                            type='number'\n                            name='mealTimes'\n                            id='mealTimes'\n                            min={3}\n                            max={6}\n                            onChange={inputChange06}\n                            placeholder=\"1日の食事回数(3-6回)\"\n                        />\n                        <button className=\"btn\">=</button>\n                    </div>\n\n                    <div className=\"output\">\n                        <p>除脂肪体重 : {wLeanBodyMass}kg</p>\n                        <p>1日のカロリー摂取量 : {wCalorieIntakeDay}kcal</p>\n                        <p>1日の目標Protein摂取量 : {wChickenBreastCalorieIntake}g</p>\n                        <p>鶏むね肉の量/day : {wChickenBreast}g</p>\n                        <p>鶏むね肉摂取カロリー/day : {wChickenBreastCalorie}kcal</p>\n                        <p>Protein以外の摂取カロリー : {wOtherProtainCalorie}kcal</p>\n                        <p>サツマイモの量/day : {wSweetPotato}g</p>\n                        <p>食事が1日{mealTimes}回の場合、1回に摂取する鶏むね肉の量 : {wChickenBreastOnce}g</p>\n                        <p>食事が1日{mealTimes}回の場合、1回に摂取するサツマイモの量 : {wSweetPotatoOnce}g</p>\n                    </div>\n\n\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}