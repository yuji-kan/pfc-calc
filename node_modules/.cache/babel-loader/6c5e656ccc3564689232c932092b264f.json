{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pfc-calc-ts\\\\src\\\\components\\\\Form.tsx\";\nimport React, { useState } from 'react';\nimport food from \"../data/food\";\n\nconst Form = () => {\n  const base = 0.1;\n\n  function orgFloor(value, base) {\n    return Math.floor(value * base) / base;\n  } // input useState set \n\n\n  const [basalMetabolicRate, setBasalMetabolicRate] = useState(\"\");\n  const [intakeCoefficient, setIntakeCoefficient] = useState(\"\");\n  const [bodyWeight, setbodyWeight] = useState(\"\");\n  const [bodyFat, setBodyFat] = useState(\"\");\n  const [proteinCoefficient, setProteinCoefficient] = useState(\"\");\n  const [mealTimes, setMealTimes] = useState(\"\"); // form input and set\n\n  const inputChange01 = e => {\n    setBasalMetabolicRate(e.target.value);\n  };\n\n  const inputChange02 = e => {\n    setIntakeCoefficient(e.target.value);\n  };\n\n  const inputChange03 = e => {\n    setbodyWeight(e.target.value);\n  };\n\n  const inputChange04 = e => {\n    setBodyFat(e.target.value);\n  };\n\n  const inputChange05 = e => {\n    setProteinCoefficient(e.target.value);\n  };\n\n  const inputChange06 = e => {\n    setMealTimes(e.target.value);\n  }; // output set\n\n\n  const [wLeanBodyMass, setwLeanBodyMass] = useState(\"\");\n  const [wCalorieIntakeDay, setwCalorieIntakeDay] = useState(\"\");\n  const [wChickenBreastCalorieIntake, setwChickenBreastCalorieIntake] = useState(\"\");\n  const [wChickenBreast, setwChickenBreast] = useState(\"\");\n  const [wChickenBreastCalorie, setwChickenBreastCalorie] = useState(\"\");\n  const [wOtherProtainCalorie, setwOtherProtainCalorie] = useState(\"\");\n  const [wSweetPotato, setwSweetPotato] = useState(\"\");\n  const [wChickenBreastOnce, setwChickenBreastOnce] = useState(\"\");\n  const [wSweetPotatoOnce, setwSweetPotatoOnce] = useState(\"\"); // submit button\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setwLeanBodyMass(String(Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)));\n    setwCalorieIntakeDay(Number(basalMetabolicRate) !== 0 && Number(intakeCoefficient) !== 0 ? String(Number(basalMetabolicRate) * Number(intakeCoefficient)) : \"\");\n    setwChickenBreastCalorieIntake(Number(bodyWeight) !== 0 ? String((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) * Number(proteinCoefficient)) : \"\");\n    setwChickenBreast(Number(bodyWeight) !== 0 ? String((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) * Number(proteinCoefficient) / Number(food.chickenBreast.protein) * 100) : \"\");\n    setwChickenBreastCalorie(String(orgFloor((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) * Number(proteinCoefficient) / Number(food.chickenBreast.protein) * 100 / 100 * Number(food.chickenBreast.calorie), base)));\n    setwOtherProtainCalorie(String(orgFloor(Number(basalMetabolicRate) * Number(intakeCoefficient) - (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) * Number(proteinCoefficient) / Number(food.chickenBreast.protein) * 100 / 100 * Number(food.chickenBreast.calorie), base)));\n    setwSweetPotato(String(Number(basalMetabolicRate) * Number(intakeCoefficient) / Number(food.sweetPotato.calorie) * 100));\n    setwChickenBreastOnce(Number(mealTimes) !== 0 ? String((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) * Number(proteinCoefficient) / Number(food.chickenBreast.protein) * 100 / Number(mealTimes)) : \"\");\n    setwSweetPotatoOnce(Number(mealTimes) !== 0 ? String(Number(basalMetabolicRate) * Number(intakeCoefficient) / Number(food.sweetPotato.calorie) * 100 / Number(mealTimes)) : \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"contact-form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"basalMetabolicRate\",\n    id: \"basalMetabolicRate\",\n    min: 1000,\n    max: 2500,\n    onChange: inputChange01,\n    placeholder: \"\\u57FA\\u790E\\u4EE3\\u8B1D(kcal)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"intakeCoefficient\",\n    id: \"intakeCoefficient\",\n    min: 1.3,\n    max: 1.7,\n    step: \"0.1\",\n    onChange: inputChange02,\n    placeholder: \"\\u6442\\u53D6\\u4FC2\\u6570(1.3-1.7) for diet 1.3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bodyWeight\",\n    id: \"bodyWeight\",\n    min: 40,\n    max: 140,\n    onChange: inputChange03,\n    placeholder: \"\\u4F53\\u91CD(40-140kg)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"bodyFat\",\n    id: \"bodyFat\",\n    min: 3,\n    max: 40,\n    onChange: inputChange04,\n    placeholder: \"\\u4F53\\u8102\\u80AA(3-25%)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"proteinCoefficient\",\n    id: \"proteinCoefficient\",\n    min: 2,\n    max: 2.5,\n    step: \"0.1\",\n    onChange: inputChange05,\n    placeholder: \"Protein\\u6442\\u53D6\\u4FC2\\u6570(2-2.5) 2.5\\u63A8\\u5968\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"mealTimes\",\n    id: \"mealTimes\",\n    min: 3,\n    max: 6,\n    onChange: inputChange06,\n    placeholder: \"1\\u65E5\\u306E\\u98DF\\u4E8B\\u56DE\\u6570(3-6\\u56DE)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"=\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \"\\u9664\\u8102\\u80AA\\u4F53\\u91CD : \", wLeanBodyMass, \"kg\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"1\\u65E5\\u306E\\u30AB\\u30ED\\u30EA\\u30FC\\u6442\\u53D6\\u91CF : \", wCalorieIntakeDay, \"kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"1\\u65E5\\u306E\\u76EE\\u6A19Protein\\u6442\\u53D6\\u91CF : \", wChickenBreastCalorieIntake, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, \"\\u9D8F\\u3080\\u306D\\u8089\\u306E\\u91CF/day : \", wChickenBreast, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"\\u9D8F\\u3080\\u306D\\u8089\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC/day : \", wChickenBreastCalorie, \"kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Protein\\u4EE5\\u5916\\u306E\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC : \", wOtherProtainCalorie, \"kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"\\u30B5\\u30C4\\u30DE\\u30A4\\u30E2\\u306E\\u91CF/day : \", wSweetPotato, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"\\u98DF\\u4E8B\\u304C1\\u65E5\", mealTimes, \"\\u56DE\\u306E\\u5834\\u5408\\u30011\\u56DE\\u306B\\u6442\\u53D6\\u3059\\u308B\\u9D8F\\u3080\\u306D\\u8089\\u306E\\u91CF : \", wChickenBreastOnce, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, \"\\u98DF\\u4E8B\\u304C1\\u65E5\", mealTimes, \"\\u56DE\\u306E\\u5834\\u5408\\u30011\\u56DE\\u306B\\u6442\\u53D6\\u3059\\u308B\\u30B5\\u30C4\\u30DE\\u30A4\\u30E2\\u306E\\u91CF : \", wSweetPotatoOnce, \"g\")))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/xampp/htdocs/pfc-calc-ts/src/components/Form.tsx"],"names":["React","useState","food","Form","base","orgFloor","value","Math","floor","basalMetabolicRate","setBasalMetabolicRate","intakeCoefficient","setIntakeCoefficient","bodyWeight","setbodyWeight","bodyFat","setBodyFat","proteinCoefficient","setProteinCoefficient","mealTimes","setMealTimes","inputChange01","e","target","inputChange02","inputChange03","inputChange04","inputChange05","inputChange06","wLeanBodyMass","setwLeanBodyMass","wCalorieIntakeDay","setwCalorieIntakeDay","wChickenBreastCalorieIntake","setwChickenBreastCalorieIntake","wChickenBreast","setwChickenBreast","wChickenBreastCalorie","setwChickenBreastCalorie","wOtherProtainCalorie","setwOtherProtainCalorie","wSweetPotato","setwSweetPotato","wChickenBreastOnce","setwChickenBreastOnce","wSweetPotatoOnce","setwSweetPotatoOnce","submitHandler","preventDefault","String","Number","chickenBreast","protein","calorie","sweetPotato"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState, FormEvent } from 'react';\r\nimport food from \"../data/food\"\r\n\r\nconst Form: React.FC = () => {\r\n    const base: number = 0.1;\r\n    function orgFloor(value: number, base: number) {\r\n        return Math.floor(value * base) / base;\r\n    }\r\n\r\n    // input useState set \r\n    const [basalMetabolicRate, setBasalMetabolicRate] = useState(\"\")\r\n    const [intakeCoefficient, setIntakeCoefficient] = useState(\"\")\r\n    const [bodyWeight, setbodyWeight] = useState(\"\")\r\n    const [bodyFat, setBodyFat] = useState(\"\")\r\n    const [proteinCoefficient, setProteinCoefficient] = useState(\"\")\r\n    const [mealTimes, setMealTimes] = useState(\"\")\r\n\r\n    // form input and set\r\n    const inputChange01 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setBasalMetabolicRate(e.target.value)\r\n    }\r\n    const inputChange02 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setIntakeCoefficient(e.target.value)\r\n    }\r\n    const inputChange03 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setbodyWeight(e.target.value)\r\n    }\r\n    const inputChange04 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setBodyFat(e.target.value)\r\n    }\r\n    const inputChange05 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setProteinCoefficient(e.target.value)\r\n    }\r\n    const inputChange06 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMealTimes(e.target.value)\r\n    }\r\n\r\n    // output set\r\n    const [wLeanBodyMass, setwLeanBodyMass] = useState(\"\")\r\n    const [wCalorieIntakeDay, setwCalorieIntakeDay] = useState(\"\")\r\n    const [\r\n        wChickenBreastCalorieIntake,\r\n        setwChickenBreastCalorieIntake\r\n    ] = useState(\"\")\r\n    const [wChickenBreast, setwChickenBreast] = useState(\"\")\r\n    const [wChickenBreastCalorie, setwChickenBreastCalorie] = useState(\"\")\r\n    const [wOtherProtainCalorie, setwOtherProtainCalorie] = useState(\"\")\r\n    const [wSweetPotato, setwSweetPotato] = useState(\"\")\r\n    const [wChickenBreastOnce, setwChickenBreastOnce] = useState(\"\")\r\n    const [wSweetPotatoOnce, setwSweetPotatoOnce] = useState(\"\")\r\n\r\n    // submit button\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n\r\n        setwLeanBodyMass(String(Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)))\r\n\r\n        setwCalorieIntakeDay(\r\n            Number(basalMetabolicRate) !== 0 && Number(intakeCoefficient) !== 0\r\n                ? String(Number(basalMetabolicRate) * Number(intakeCoefficient))\r\n                : \"\"\r\n        )\r\n        setwChickenBreastCalorieIntake(\r\n            Number(bodyWeight) !== 0\r\n                ? String((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\r\n                    Number(proteinCoefficient))\r\n                : \"\"\r\n        )\r\n        setwChickenBreast(\r\n            Number(bodyWeight) !== 0\r\n                ? String(\r\n                    ((Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\r\n                        Number(proteinCoefficient)) /\r\n                    Number(food.chickenBreast.protein) *\r\n                    100\r\n                )\r\n                : \"\"\r\n        )\r\n        setwChickenBreastCalorie(\r\n            String(\r\n                orgFloor(((\r\n                    (\r\n                        (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\r\n                        Number(proteinCoefficient) /\r\n                        Number(food.chickenBreast.protein) *\r\n                        100\r\n                    ) /\r\n                    100) *\r\n                    Number(food.chickenBreast.calorie)), base)\r\n            )\r\n        )\r\n        setwOtherProtainCalorie(\r\n            String(\r\n\r\n\r\n                orgFloor((Number(basalMetabolicRate) * Number(intakeCoefficient) -\r\n                    (\r\n                        (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\r\n                        Number(proteinCoefficient) /\r\n                        Number(food.chickenBreast.protein) *\r\n                        100\r\n                        /\r\n                        100) *\r\n                    Number(food.chickenBreast.calorie)), base)\r\n\r\n\r\n            )\r\n        )\r\n        setwSweetPotato(\r\n            String(\r\n                ((Number(basalMetabolicRate) * Number(intakeCoefficient)) / Number(food.sweetPotato.calorie)) *\r\n                100\r\n            )\r\n        )\r\n        setwChickenBreastOnce(\r\n            Number(mealTimes) !== 0\r\n                ? String(((\r\n                    (Number(bodyWeight) - Number(bodyWeight) * (Number(bodyFat) / 100)) *\r\n                    Number(proteinCoefficient) /\r\n                    Number(food.chickenBreast.protein)) *\r\n                    100\r\n                ) / Number(mealTimes))\r\n                : \"\"\r\n        )\r\n        setwSweetPotatoOnce(\r\n            Number(mealTimes) !== 0\r\n                ? String(\r\n                    (\r\n                        ((Number(basalMetabolicRate) * Number(intakeCoefficient)) /\r\n                            Number(food.sweetPotato.calorie)) *\r\n                        100\r\n                    ) / Number(mealTimes)\r\n                )\r\n                : \"\"\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='wrapper'>\r\n                <form className=\"contact-form\" onSubmit={submitHandler}>\r\n                    <div className=\"input-fields\">\r\n\r\n                        <input\r\n                            type='number'\r\n                            name='basalMetabolicRate'\r\n                            id='basalMetabolicRate'\r\n                            min={1000}\r\n                            max={2500}\r\n                            onChange={inputChange01}\r\n                            placeholder=\"基礎代謝(kcal)\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='intakeCoefficient'\r\n                            id='intakeCoefficient'\r\n                            min={1.3}\r\n                            max={1.7}\r\n                            step='0.1'\r\n                            onChange={inputChange02}\r\n                            placeholder=\"摂取係数(1.3-1.7) for diet 1.3\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='bodyWeight'\r\n                            id='bodyWeight'\r\n                            min={40}\r\n                            max={140}\r\n                            onChange={inputChange03}\r\n                            placeholder=\"体重(40-140kg)\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='bodyFat'\r\n                            id='bodyFat'\r\n                            min={3}\r\n                            max={40}\r\n                            onChange={inputChange04}\r\n                            placeholder=\"体脂肪(3-25%)\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='proteinCoefficient'\r\n                            id='proteinCoefficient'\r\n                            min={2}\r\n                            max={2.5}\r\n                            step='0.1'\r\n                            onChange={inputChange05}\r\n                            placeholder=\"Protein摂取係数(2-2.5) 2.5推奨\"\r\n                        />\r\n                        <input\r\n                            type='number'\r\n                            name='mealTimes'\r\n                            id='mealTimes'\r\n                            min={3}\r\n                            max={6}\r\n                            onChange={inputChange06}\r\n                            placeholder=\"1日の食事回数(3-6回)\"\r\n                        />\r\n                        <button className=\"btn\">=</button>\r\n                    </div>\r\n\r\n                    <div className=\"output\">\r\n                        <p>除脂肪体重 : {wLeanBodyMass}kg</p>\r\n                        <p>1日のカロリー摂取量 : {wCalorieIntakeDay}kcal</p>\r\n                        <p>1日の目標Protein摂取量 : {wChickenBreastCalorieIntake}g</p>\r\n                        <p>鶏むね肉の量/day : {wChickenBreast}g</p>\r\n                        <p>鶏むね肉摂取カロリー/day : {wChickenBreastCalorie}kcal</p>\r\n                        <p>Protein以外の摂取カロリー : {wOtherProtainCalorie}kcal</p>\r\n                        <p>サツマイモの量/day : {wSweetPotato}g</p>\r\n                        <p>食事が1日{mealTimes}回の場合、1回に摂取する鶏むね肉の量 : {wChickenBreastOnce}g</p>\r\n                        <p>食事が1日{mealTimes}回の場合、1回に摂取するサツマイモの量 : {wSweetPotatoOnce}g</p>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}